name: ci

on:
  push:
    branches:
      - 'github-actions' # remove when merged to master
      - 'master'
      - 'v*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'github-actions' # remove when merged to master
      - 'master'
      - 'v*'

env:
  REPO_SLUG_ORIGIN: "moby/buildkit"
  LINUXKIT_BINFMT: "v0.8"
  BUILDKIT_HOST: "tcp://0.0.0.0:1234"
  BUILDKIT_PORT: "1234"
  PLATFORMS: "linux/amd64,linux/arm/v7,linux/arm64,linux/s390x,linux/ppc64le"
  PREFER_BUILDCTL: "1"

jobs:
  binaries:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Install
        run: |
          mkdir -p /tmp/buildctl
          docker run --rm --privileged linuxkit/binfmt:$LINUXKIT_BINFMT
          docker run --name buildkit -d --privileged -p $BUILDKIT_PORT:$BUILDKIT_PORT $REPO_SLUG_ORIGIN --debug --addr $BUILDKIT_HOST --oci-worker-gc=false
          sudo docker cp buildkit:/usr/bin/buildctl /usr/local/bin/
      -
        name: Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildkit-cache/binaries
          key: ${{ runner.os }}-buildkit-binaries-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildkit-binaries-
      -
        name: Build
        run: |
          buildctl build --progress plain --frontend=dockerfile.v0 \
            --local context=. --local dockerfile=. \
            --opt target=binaries \
            --import-cache type=local,src=/tmp/.buildkit-cache/binaries \
            --export-cache type=local,dest=/tmp/.buildkit-cache/binaries
      -
        name: Dump context
        if: always()
        uses: crazy-max/ghaction-dump-context@v1

  integration-tests-base:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Install
        run: |
          mkdir -p /tmp/buildctl
          docker run --rm --privileged linuxkit/binfmt:$LINUXKIT_BINFMT
          docker run --name buildkit -d --privileged -p $BUILDKIT_PORT:$BUILDKIT_PORT $REPO_SLUG_ORIGIN --debug --addr $BUILDKIT_HOST --oci-worker-gc=false
          sudo docker cp buildkit:/usr/bin/buildctl /usr/local/bin/
      -
        name: Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildkit-cache/integration-tests
          key: ${{ runner.os }}-buildkit-integration-tests-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildkit-integration-tests-
      -
        name: Build
        run: |
          buildctl build --progress plain --frontend=dockerfile.v0 \
            --local context=. --local dockerfile=. \
            --opt target=integration-tests-base \
            --import-cache type=local,src=/tmp/.buildkit-cache/integration-tests \
            --export-cache type=local,dest=/tmp/.buildkit-cache/integration-tests
      -
        name: Dump context
        if: always()
        uses: crazy-max/ghaction-dump-context@v1

  integration-tests:
    runs-on: ubuntu-latest
    needs: [ integration-tests-base ]
    env:
      IID: buildkit-tests
      IID_FILE: /tmp/docker-iidfile
      VOL: /tmp/.buildkit-cache-test
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Install
        run: |
          mkdir -p /tmp/buildctl
          docker run --rm --privileged linuxkit/binfmt:$LINUXKIT_BINFMT
          docker run --name buildkit -d --privileged -p $BUILDKIT_PORT:$BUILDKIT_PORT $REPO_SLUG_ORIGIN --debug --addr $BUILDKIT_HOST --oci-worker-gc=false
          sudo docker cp buildkit:/usr/bin/buildctl /usr/local/bin/
      -
        name: Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildkit-cache/integration-tests
          key: ${{ runner.os }}-buildkit-integration-tests-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildkit-integration-tests-
      -
        name: Build
        run: |
          buildctl build --progress plain --frontend=dockerfile.v0 \
            --local context=. --local dockerfile=. \
            --opt target=integration-tests \
            --import-cache type=local,src=/tmp/.buildkit-cache/integration-tests \
            --export-cache type=local,dest=/tmp/.buildkit-cache/integration-tests \
            --output type=docker,name=$IID,dest=$IID_FILE
      -
        name: Test client
        run: |
          docker load -i $IID_FILE
          cacheVolume=$(docker create -v $VOL -v $VOL/registry -v /go/pkg/mod alpine)
          cid=$(docker create --rm -v /tmp --volumes-from=$cacheVolume -e TEST_DOCKERD -e SKIP_INTEGRATION_TESTS -e BUILDKIT_REGISTRY_MIRROR_DIR=$VOL/registry --privileged $IID go test -v --timeout=20m ./client)
          docker start -a $cid
          docker rm -v $cacheVolume
      -
        name: Test buildctl
        run: |
          docker load -i $IID_FILE
          cacheVolume=$(docker create -v $VOL -v $VOL/registry -v /go/pkg/mod alpine)
          cid=$(docker create --rm -v /tmp --volumes-from=$cacheVolume -e TEST_DOCKERD -e SKIP_INTEGRATION_TESTS -e BUILDKIT_REGISTRY_MIRROR_DIR=$VOL/registry --privileged $IID go test -v ./cmd/buildctl)
          docker start -a $cid
          docker rm -v $cacheVolume
      -
        name: Test containerd
        run: |
          docker load -i $IID_FILE
          cacheVolume=$(docker create -v $VOL -v $VOL/registry -v /go/pkg/mod alpine)
          cid=$(docker create --rm -v /tmp --volumes-from=$cacheVolume -e TEST_DOCKERD -e SKIP_INTEGRATION_TESTS -e BUILDKIT_REGISTRY_MIRROR_DIR=$VOL/registry --privileged $IID go test -v ./worker/containerd)
          docker start -a $cid
          docker rm -v $cacheVolume
      -
        name: Dump context
        if: always()
        uses: crazy-max/ghaction-dump-context@v1
