name: test

on:
  push:
    branches:
      - 'github-actions' # remove when merged to master
      - 'master'
      - 'v*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'github-actions' # remove when merged to master
      - 'master'
      - 'v*'

env:
  REPO_SLUG_ORIGIN: "moby/buildkit"
  LINUXKIT_BINFMT: "v0.8"
  BUILDKIT_HOST: "tcp://0.0.0.0:1234"
  BUILDKIT_PORT: "1234"

jobs:
  binaries:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Install buildctl
        run: |
          mkdir -p /tmp/buildctl
          docker run --rm --privileged linuxkit/binfmt:$LINUXKIT_BINFMT
          docker run --name buildkit -d --privileged -p $BUILDKIT_PORT:$BUILDKIT_PORT $REPO_SLUG_ORIGIN --debug --addr $BUILDKIT_HOST --oci-worker-gc=false
          sudo docker cp buildkit:/usr/bin/buildctl /usr/local/bin/
      -
        name: Cache binaries
        uses: actions/cache@v2
        with:
          path: /tmp/.buildkit-cache/binaries
          key: ${{ runner.os }}-buildkit-binaries-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildkit-binaries-
      -
        name: Build binaries
        run: |
          buildctl build --frontend=dockerfile.v0 \
            --local context=. --local dockerfile=. \
            --opt target=binaries \
            --import-cache type=local,src=/tmp/.buildkit-cache/binaries \
            --export-cache type=local,dest=/tmp/.buildkit-cache/binaries
      -
        name: Dump context
        if: always()
        uses: crazy-max/ghaction-dump-context@v1

  integration-tests-base:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Install buildctl
        run: |
          mkdir -p /tmp/buildctl
          docker run --rm --privileged linuxkit/binfmt:$LINUXKIT_BINFMT
          docker run --name buildkit -d --privileged -p $BUILDKIT_PORT:$BUILDKIT_PORT $REPO_SLUG_ORIGIN --debug --addr $BUILDKIT_HOST --oci-worker-gc=false
          sudo docker cp buildkit:/usr/bin/buildctl /usr/local/bin/
      -
        name: Cache integration-tests
        uses: actions/cache@v2
        with:
          path: /tmp/.buildkit-cache/integration-tests
          key: ${{ runner.os }}-buildkit-integration-tests-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildkit-integration-tests-
      -
        name: Build integration-tests
        run: |
          buildctl build --frontend=dockerfile.v0 \
            --local context=. --local dockerfile=. \
            --opt target=integration-tests-base \
            --import-cache type=local,src=/tmp/.buildkit-cache/integration-tests \
            --export-cache type=local,dest=/tmp/.buildkit-cache/integration-tests
      -
        name: Dump context
        if: always()
        uses: crazy-max/ghaction-dump-context@v1

  integration-tests:
    runs-on: ubuntu-latest
    needs: [ integration-tests-base ]
    env:
      IID: buildkit-tests
      IID_FILE: /tmp/docker-iidfile
      VOL: /tmp/.buildkit-cache-test
    strategy:
      fail-fast: false
      matrix:
        include:
          -
            pkg: ./client
            flags: -v --timeout=20m
            skip-it: 0
          -
            pkg: ./cmd/buildctl
            flags: -v
            skip-it: 0
          -
            pkg: ./worker/containerd
            flags: -v
            skip-it: 0
          -
            pkg: ./...
            flags: -v
            skip-it: 1
          -
            pkg: ./frontend
            flags: -v
            skip-it: 0
          -
            pkg: ./frontend/dockerfile
            flags: -v --parallel=6 --timeout=20m
            skip-it: 0
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Install buildctl
        run: |
          mkdir -p /tmp/buildctl
          docker run --rm --privileged linuxkit/binfmt:$LINUXKIT_BINFMT
          docker run --name buildkit -d --privileged -p $BUILDKIT_PORT:$BUILDKIT_PORT $REPO_SLUG_ORIGIN --debug --addr $BUILDKIT_HOST --oci-worker-gc=false
          sudo docker cp buildkit:/usr/bin/buildctl /usr/local/bin/
      -
        name: Cache integration-tests
        uses: actions/cache@v2
        with:
          path: /tmp/.buildkit-cache/integration-tests
          key: ${{ runner.os }}-buildkit-integration-tests-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildkit-integration-tests-
      -
        name: Build integration-tests
        run: |
          buildctl build --frontend=dockerfile.v0 \
            --local context=. --local dockerfile=. \
            --opt target=integration-tests \
            --import-cache type=local,src=/tmp/.buildkit-cache/integration-tests \
            --output type=docker,name=$IID,dest=$IID_FILE
      -
        name: Test ${{ matrix.pkg }}
        run: |
          docker load -i $IID_FILE
          cacheVolume=$(docker create -v $VOL -v $VOL/registry -v /go/pkg/mod alpine)
          cid=$(docker create --rm -v /tmp --volumes-from=$cacheVolume -e TEST_DOCKERD -e SKIP_INTEGRATION_TESTS=${{ matrix.skip-it }} -e BUILDKIT_REGISTRY_MIRROR_DIR=$VOL/registry --privileged $IID go test ${{ matrix.flags }} ${{ matrix.pkg }})
          docker start -a $cid
          docker rm -v $cacheVolume
      -
        name: Dump context
        if: always()
        uses: crazy-max/ghaction-dump-context@v1

  dockerfile-tests:
    runs-on: ubuntu-latest
    needs: [ integration-tests-base ]
    env:
      IID: buildkit-tests
      IID_FILE: /tmp/docker-iidfile
      OCI_FILE: /tmp/docker-ocifile
      VOL: /tmp/.buildkit-cache-test
    strategy:
      fail-fast: false
      matrix:
        include:
          -
            release: mainline
            pkg: ./frontend/dockerfile
            flags: --count=1 -v
          -
            release: experimental
            pkg: ./frontend/dockerfile
            flags: --count=1 -v
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Install buildctl
        run: |
          mkdir -p /tmp/buildctl
          docker run --rm --privileged linuxkit/binfmt:$LINUXKIT_BINFMT
          docker run --name buildkit -d --privileged -p $BUILDKIT_PORT:$BUILDKIT_PORT $REPO_SLUG_ORIGIN --debug --addr $BUILDKIT_HOST --oci-worker-gc=false
          sudo docker cp buildkit:/usr/bin/buildctl /usr/local/bin/
      -
        name: Cache integration-tests
        uses: actions/cache@v2
        with:
          path: /tmp/.buildkit-cache/integration-tests
          key: ${{ runner.os }}-buildkit-integration-tests-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildkit-integration-tests-
      -
        name: Build integration-tests
        run: |
          buildctl build --frontend=dockerfile.v0 \
            --local context=. --local dockerfile=. \
            --opt target=integration-tests \
            --import-cache type=local,src=/tmp/.buildkit-cache/integration-tests \
            --output type=docker,name=$IID,dest=$IID_FILE
      -
        name: Cache dockerfile-frontend
        uses: actions/cache@v2
        with:
          path: /tmp/.buildkit-cache/dockerfile-frontend
          key: ${{ runner.os }}-buildkit-dockerfile-frontend-${{ matrix.release }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildkit-dockerfile-frontend-${{ matrix.release }}-
      -
        name: Build dockerfile-frontend
        run: |
          buildtags=$(cat ./frontend/dockerfile/release/${{ matrix.release }}/tags)
          buildctl build --frontend=dockerfile.v0 \
            --local context=. --local dockerfile=. \
            --opt filename=./frontend/dockerfile/cmd/dockerfile-frontend/Dockerfile \
            --opt build-arg:BUILDTAGS="$buildtags" \
            --import-cache type=local,src=/tmp/.buildkit-cache/dockerfile-frontend \
            --export-cache type=local,dest=/tmp/.buildkit-cache/dockerfile-frontend \
            --output type=oci,dest=$OCI_FILE
      -
        name: Test
        run: |
          docker load -i $IID_FILE
          cacheVolume=$(docker create -v $VOL -v $VOL/registry -v /go/pkg/mod alpine)
          cid=$(docker create --rm -v /tmp --volumes-from=$cacheVolume -e TEST_DOCKERD -e BUILDKIT_REGISTRY_MIRROR_DIR=$VOL/registry -e BUILDKIT_WORKER_RANDOM=1 -e FRONTEND_GATEWAY_ONLY=local:/${{ matrix.release }}.tar -e EXTERNAL_DF_FRONTEND=/dockerfile-frontend --privileged $IID go test -tags '$buildtags' ${{ matrix.flags }} ${{ matrix.pkg }})
          docker cp $OCI_FILE $cid:/${{ matrix.release }}.tar
          docker start -a $cid
          docker rm -v $cacheVolume
      -
        name: Dump context
        if: always()
        uses: crazy-max/ghaction-dump-context@v1
